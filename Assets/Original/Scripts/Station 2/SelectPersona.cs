using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using Valve.VR;
using VRTK;

public class SelectPersona : MonoBehaviour
{
    // this script demonstrates how to detect when this object has been grabbed by a controller.  
    // it requires the object already have the VRTK_InteractableObject attached.  
    // it simpley subscribes to the event generated by the interactable object script.  
    // there are many more events to subscribe to so lots of interaction options are posible. 

    // use this script to ADD functionality to your object not provied by the VRTK scripts
    // this could include triggering other actions based, etc
    // a full list of events can be found in the interactable object script

    public Station2Manager station2Manager;
    public int personaIndex = 0;

    void Start()

    {
        //make sure the object has the VRTK script attached... 
        if (GetComponent<VRTK_InteractableObject>() == null)
        {
            Debug.LogError("Object is required to be " +
                "attached to an Object that has the VRTK_InteractableObject script attached to it");
            return;
        }
        
        //subscribe to the event.  NOTE: the "ObectGrabbed"  this is the procedure to invoke if this objectis grabbed.. 
        GetComponent<VRTK_InteractableObject>().InteractableObjectUsed += 
            new InteractableObjectEventHandler(ObjectGrabbed);
    }

    //this object has been grabbed.. so do what ever is in the code.. 
    private void ObjectGrabbed(object sender, InteractableObjectEventArgs e)
    {
        station2Manager.SelectPersona(personaIndex);
    }

}
